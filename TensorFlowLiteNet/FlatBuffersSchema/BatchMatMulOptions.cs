// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct BatchMatMulOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static BatchMatMulOptions GetRootAsBatchMatMulOptions(ByteBuffer _bb) { return GetRootAsBatchMatMulOptions(_bb, new BatchMatMulOptions()); }
  public static BatchMatMulOptions GetRootAsBatchMatMulOptions(ByteBuffer _bb, BatchMatMulOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BatchMatMulOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool AdjX { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool AdjY { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool AsymmetricQuantizeInputs { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<tflite.BatchMatMulOptions> CreateBatchMatMulOptions(FlatBufferBuilder builder,
      bool adj_x = false,
      bool adj_y = false,
      bool asymmetric_quantize_inputs = false) {
    builder.StartTable(3);
    BatchMatMulOptions.AddAsymmetricQuantizeInputs(builder, asymmetric_quantize_inputs);
    BatchMatMulOptions.AddAdjY(builder, adj_y);
    BatchMatMulOptions.AddAdjX(builder, adj_x);
    return BatchMatMulOptions.EndBatchMatMulOptions(builder);
  }

  public static void StartBatchMatMulOptions(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddAdjX(FlatBufferBuilder builder, bool adjX) { builder.AddBool(0, adjX, false); }
  public static void AddAdjY(FlatBufferBuilder builder, bool adjY) { builder.AddBool(1, adjY, false); }
  public static void AddAsymmetricQuantizeInputs(FlatBufferBuilder builder, bool asymmetricQuantizeInputs) { builder.AddBool(2, asymmetricQuantizeInputs, false); }
  public static Offset<tflite.BatchMatMulOptions> EndBatchMatMulOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.BatchMatMulOptions>(o);
  }
};


}
